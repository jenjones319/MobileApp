{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport PermissionsAndroid from \"react-native-web/dist/exports/PermissionsAndroid\";\nimport processColor from \"react-native-web/dist/exports/processColor\";\nvar _PermissionsAndroid$P = PermissionsAndroid.PERMISSIONS,\n    WRITE_CALENDAR = _PermissionsAndroid$P.WRITE_CALENDAR,\n    READ_CALENDAR = _PermissionsAndroid$P.READ_CALENDAR;\nvar AddCalendarEvent = NativeModules.AddCalendarEvent;\nexport var presentEventViewingDialog = function presentEventViewingDialog(options) {\n  var toCall = function toCall() {\n    return AddCalendarEvent.presentEventViewingDialog(processColorsIOS(options));\n  };\n\n  return withPermissionsCheck(toCall);\n};\nexport var presentEventEditingDialog = function presentEventEditingDialog(options) {\n  var toCall = function toCall() {\n    return AddCalendarEvent.presentEventEditingDialog(processColorsIOS(options));\n  };\n\n  return withPermissionsCheck(toCall);\n};\nexport var presentEventCreatingDialog = function presentEventCreatingDialog(options) {\n  var toCall = function toCall() {\n    return AddCalendarEvent.presentEventCreatingDialog(processColorsIOS(options));\n  };\n\n  return withPermissionsCheck(toCall);\n};\n\nvar processColorsIOS = function processColorsIOS(config) {\n  if (Platform.OS === 'android' || !config || !config.navigationBarIOS) {\n    return config;\n  } else {\n    return transformConfigColors(config);\n  }\n};\n\nexport var transformConfigColors = function transformConfigColors(config) {\n  var transformedKeys = ['tintColor', 'barTintColor', 'backgroundColor', 'titleColor'];\n  var navigationBarIOS = config.navigationBarIOS;\n  var processedColors = Object.keys(navigationBarIOS).filter(function (key) {\n    return transformedKeys.includes(key);\n  }).reduce(function (accumulator, key) {\n    return _objectSpread(_objectSpread({}, accumulator), {}, _defineProperty({}, key, processColor(navigationBarIOS[key])));\n  }, {});\n\n  var configCopy = _objectSpread({}, config);\n\n  configCopy.navigationBarIOS = _objectSpread(_objectSpread({}, configCopy.navigationBarIOS), processedColors);\n  return configCopy;\n};\n\nvar withPermissionsCheck = function withPermissionsCheck(toCallWhenPermissionGranted) {\n  if (Platform.OS === 'android') {\n    return withPermissionsCheckAndroid(toCallWhenPermissionGranted);\n  } else {\n    return withPermissionsCheckIOS(toCallWhenPermissionGranted);\n  }\n};\n\nvar permissionNotGranted = 'permissionNotGranted';\n\nvar withPermissionsCheckAndroid = function withPermissionsCheckAndroid(toCallWhenPermissionGranted) {\n  var _await$Promise$all, _await$Promise$all2, hasWritePermission, hasReadPermission, results;\n\n  return _regeneratorRuntime.async(function withPermissionsCheckAndroid$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(Promise.all([PermissionsAndroid.check(WRITE_CALENDAR), PermissionsAndroid.check(READ_CALENDAR)]));\n\n        case 2:\n          _await$Promise$all = _context.sent;\n          _await$Promise$all2 = _slicedToArray(_await$Promise$all, 2);\n          hasWritePermission = _await$Promise$all2[0];\n          hasReadPermission = _await$Promise$all2[1];\n\n          if (!(hasWritePermission === true && hasReadPermission === true)) {\n            _context.next = 8;\n            break;\n          }\n\n          return _context.abrupt(\"return\", toCallWhenPermissionGranted());\n\n        case 8:\n          _context.next = 10;\n          return _regeneratorRuntime.awrap(PermissionsAndroid.requestMultiple([WRITE_CALENDAR, READ_CALENDAR]));\n\n        case 10:\n          results = _context.sent;\n\n          if (!(results[READ_CALENDAR] === PermissionsAndroid.RESULTS.GRANTED && results[WRITE_CALENDAR] === PermissionsAndroid.RESULTS.GRANTED)) {\n            _context.next = 15;\n            break;\n          }\n\n          return _context.abrupt(\"return\", toCallWhenPermissionGranted());\n\n        case 15:\n          return _context.abrupt(\"return\", Promise.reject(permissionNotGranted));\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar withPermissionsCheckIOS = function withPermissionsCheckIOS(toCallWhenPermissionGranted) {\n  var hasPermission;\n  return _regeneratorRuntime.async(function withPermissionsCheckIOS$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(AddCalendarEvent.requestCalendarPermission());\n\n        case 2:\n          hasPermission = _context2.sent;\n\n          if (!hasPermission) {\n            _context2.next = 7;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", toCallWhenPermissionGranted());\n\n        case 7:\n          return _context2.abrupt(\"return\", Promise.reject(permissionNotGranted));\n\n        case 8:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["C:/Users/16052/deltav/401/MobileApp/node_modules/react-native-add-calendar-event/index.js"],"names":["PermissionsAndroid","PERMISSIONS","WRITE_CALENDAR","READ_CALENDAR","AddCalendarEvent","NativeModules","presentEventViewingDialog","options","toCall","processColorsIOS","withPermissionsCheck","presentEventEditingDialog","presentEventCreatingDialog","config","Platform","OS","navigationBarIOS","transformConfigColors","transformedKeys","processedColors","Object","keys","filter","key","includes","reduce","accumulator","processColor","configCopy","toCallWhenPermissionGranted","withPermissionsCheckAndroid","withPermissionsCheckIOS","permissionNotGranted","Promise","all","check","hasWritePermission","hasReadPermission","requestMultiple","results","RESULTS","GRANTED","reject","requestCalendarPermission","hasPermission"],"mappings":"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","sourcesContent":["import { NativeModules, Platform, PermissionsAndroid, processColor } from 'react-native';\nconst { WRITE_CALENDAR, READ_CALENDAR } = PermissionsAndroid.PERMISSIONS;\n\nconst AddCalendarEvent = NativeModules.AddCalendarEvent;\n\nexport const presentEventViewingDialog = options => {\n  const toCall = () => AddCalendarEvent.presentEventViewingDialog(processColorsIOS(options));\n  return withPermissionsCheck(toCall);\n};\n\nexport const presentEventEditingDialog = options => {\n  const toCall = () => AddCalendarEvent.presentEventEditingDialog(processColorsIOS(options));\n  return withPermissionsCheck(toCall);\n};\n\nexport const presentEventCreatingDialog = options => {\n  const toCall = () => AddCalendarEvent.presentEventCreatingDialog(processColorsIOS(options));\n  return withPermissionsCheck(toCall);\n};\n\nconst processColorsIOS = config => {\n  if (Platform.OS === 'android' || !config || !config.navigationBarIOS) {\n    return config;\n  } else {\n    return transformConfigColors(config);\n  }\n};\n\nexport const transformConfigColors = config => {\n  const transformedKeys = ['tintColor', 'barTintColor', 'backgroundColor', 'titleColor'];\n  const { navigationBarIOS } = config;\n  const processedColors = Object.keys(navigationBarIOS)\n    .filter(key => transformedKeys.includes(key))\n    .reduce(\n      (accumulator, key) => ({ ...accumulator, [key]: processColor(navigationBarIOS[key]) }),\n      {}\n    );\n\n  const configCopy = { ...config };\n  configCopy.navigationBarIOS = { ...configCopy.navigationBarIOS, ...processedColors };\n  return configCopy;\n};\n\nconst withPermissionsCheck = toCallWhenPermissionGranted => {\n  if (Platform.OS === 'android') {\n    return withPermissionsCheckAndroid(toCallWhenPermissionGranted);\n  } else {\n    return withPermissionsCheckIOS(toCallWhenPermissionGranted);\n  }\n};\n\nconst permissionNotGranted = 'permissionNotGranted';\n\nconst withPermissionsCheckAndroid = async toCallWhenPermissionGranted => {\n  // it seems unnecessary to check first, but if permission is manually disabled\n  // the PermissionsAndroid.request will return granted (a RN bug?)\n  const [hasWritePermission, hasReadPermission] = await Promise.all([\n    PermissionsAndroid.check(WRITE_CALENDAR),\n    PermissionsAndroid.check(READ_CALENDAR),\n  ]);\n\n  if (hasWritePermission === true && hasReadPermission === true) {\n    return toCallWhenPermissionGranted();\n  }\n\n  const results = await PermissionsAndroid.requestMultiple([WRITE_CALENDAR, READ_CALENDAR]);\n\n  if (\n    results[READ_CALENDAR] === PermissionsAndroid.RESULTS.GRANTED &&\n    results[WRITE_CALENDAR] === PermissionsAndroid.RESULTS.GRANTED\n  ) {\n    return toCallWhenPermissionGranted();\n  } else {\n    return Promise.reject(permissionNotGranted);\n  }\n};\n\nconst withPermissionsCheckIOS = async toCallWhenPermissionGranted => {\n  const hasPermission = await AddCalendarEvent.requestCalendarPermission();\n\n  if (hasPermission) {\n    return toCallWhenPermissionGranted();\n  } else {\n    return Promise.reject(permissionNotGranted);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}