{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\16052\\\\deltav\\\\401\\\\MobileApp\\\\App.js\";\n\nimport React, { useState } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Constants from \"expo-constants\";\n\nvar App = function App() {\n  var styleTypes = ['default', 'dark-content', 'light-content'];\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      visibleStatusBar = _useState2[0],\n      setVisibleStatusBar = _useState2[1];\n\n  var _useState3 = useState(styleTypes[0]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      styleStatusBar = _useState4[0],\n      setStyleStatusBar = _useState4[1];\n\n  var changeVisibilityStatusBar = function changeVisibilityStatusBar() {\n    setVisibleStatusBar(!visibleStatusBar);\n  };\n\n  var changeStyleStatusBar = function changeStyleStatusBar() {\n    var styleId = styleTypes.indexOf(styleStatusBar) + 1;\n\n    if (styleId === styleTypes.length) {\n      return setStyleStatusBar(styleTypes[0]);\n    }\n\n    return setStyleStatusBar(styleTypes[styleId]);\n  };\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isEnabled = _useState6[0],\n      setIsEnabled = _useState6[1];\n\n  var toggleSwitch = function toggleSwitch() {\n    return setIsEnabled(function (previousState) {\n      return !previousState;\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"StatusBar Style: \", styleStatusBar), React.createElement(Text, {\n    style: styles.textStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"StatusBar Visibility: \", !visibleStatusBar ? 'Visible?' : 'Hidden')), React.createElement(StatusBar, {\n    backgroundColor: \"Ivory\",\n    barStyle: styleStatusBar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, React.createElement(StatusBar, {\n    hidden: visibleStatusBar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.buttonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    title: \"Invisible. That's my superpower\",\n    onPress: function onPress() {\n      return changeVisibilityStatusBar();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.buttonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    title: \"Change me. I've got styles...\",\n    onPress: function onPress() {\n      return changeStyleStatusBar();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, React.createElement(Switch, {\n    title: \"On/Off Switch\",\n    trackColor: {\n      false: \"#851625\",\n      true: \"#F3EF15\"\n    },\n    thumbColor: isEnabled ? \"#FABD15\" : \"#f3EF15\",\n    ios_backgroundColor: \"ivory\",\n    onValueChange: toggleSwitch,\n    value: isEnabled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingTop: Constants.statusBarHeight,\n    backgroundColor: 'ivory',\n    color: 'ivory',\n    padding: 3\n  },\n  buttonContainer: {\n    padding: 7\n  },\n  textStyle: {\n    textAlign: 'center'\n  }\n});\nexport default App;","map":{"version":3,"sources":["C:/Users/16052/deltav/401/MobileApp/App.js"],"names":["React","useState","Constants","App","styleTypes","visibleStatusBar","setVisibleStatusBar","styleStatusBar","setStyleStatusBar","changeVisibilityStatusBar","changeStyleStatusBar","styleId","indexOf","length","isEnabled","setIsEnabled","toggleSwitch","previousState","styles","container","textStyle","buttonContainer","false","true","StyleSheet","create","flex","justifyContent","paddingTop","statusBarHeight","backgroundColor","color","padding","textAlign"],"mappings":"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","sourcesContent":["\r\nimport React, { useState } from \"react\";\r\nimport { Button, Text, StyleSheet, Switch, StatusBar, View } from \"react-native\";\r\n\r\nimport Constants from \"expo-constants\";\r\n\r\nconst App = () => {\r\n  const styleTypes = ['default','dark-content', 'light-content'];\r\n  const [visibleStatusBar, setVisibleStatusBar] = useState(false);\r\n  const [styleStatusBar, setStyleStatusBar] = useState(styleTypes[0]);\r\n\r\n  const changeVisibilityStatusBar = () => {\r\n    setVisibleStatusBar(!visibleStatusBar);\r\n  };\r\n\r\n  const changeStyleStatusBar = () => {\r\n    const styleId = styleTypes.indexOf(styleStatusBar) + 1;\r\n\r\n    if(styleId === styleTypes.length){\r\n      return setStyleStatusBar(styleTypes[0]);\r\n    }\r\n    return setStyleStatusBar(styleTypes[styleId]);\r\n  };\r\n\r\n  const [isEnabled, setIsEnabled] = useState(false);\r\n    const toggleSwitch = () => setIsEnabled(previousState => !previousState);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View>\r\n        <Text style={styles.textStyle}>StatusBar Style: {styleStatusBar}</Text>\r\n        <Text style={styles.textStyle}>StatusBar Visibility: {!visibleStatusBar ? 'Visible?': 'Hidden'}</Text>\r\n      </View>\r\n      <StatusBar backgroundColor=\"Ivory\" barStyle={styleStatusBar} />\r\n      <View>\r\n        <StatusBar hidden={visibleStatusBar} />\r\n      </View>\r\n      <View style={styles.buttonContainer}>\r\n        <Button title=\"Invisible. That's my superpower\" onPress={() => changeVisibilityStatusBar()} />\r\n      </View>\r\n      <View style={styles.buttonContainer}>\r\n        <Button title=\"Change me. I've got styles...\" onPress={() => changeStyleStatusBar()} />\r\n      </View>\r\n\r\n    <View style={styles.container}>\r\n      <Switch title=\"On/Off Switch\"\r\n        trackColor={{ false: \"#851625\", true: \"#F3EF15\" }}\r\n        thumbColor={isEnabled ? \"#FABD15\" : \"#f3EF15\"}\r\n        ios_backgroundColor=\"ivory\"\r\n        onValueChange={toggleSwitch}\r\n        value={isEnabled}\r\n      />\r\n    </View>\r\n\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    paddingTop: Constants.statusBarHeight,\r\n    backgroundColor: 'ivory',\r\n    color: 'ivory',\r\n    padding: 3\r\n  },\r\n  buttonContainer:{\r\n    padding: 7\r\n  },\r\n  textStyle:{\r\n    textAlign: 'center'\r\n  }\r\n});\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}